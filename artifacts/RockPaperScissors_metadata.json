{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "userA_in",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "userB_in",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "pickDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "revealDuration",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooEarly",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooLate",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "gamedEnded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "noRightToAnnounceTheResult",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "noRightToPick",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "noRightToReveal",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "sameUserAddresses",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "userAlreadyCommited",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "userAlreadyRevealed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "wrongData",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					}
				],
				"name": "announceWinner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "tie",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "announceResult",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "hasPickedA",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "hasPickedB",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "hasRevealedA",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "hasRevealedB",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "manager",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "userPick",
						"type": "bytes32"
					}
				],
				"name": "pick",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pickA",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pickB",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pickEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "prize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "pick",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "nonce",
						"type": "string"
					}
				],
				"name": "reveal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "revealEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userA",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userB",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"TooEarly(uint256)": [
					{
						"notice": "The function has been called too early. Try again at `time`."
					}
				],
				"TooLate(uint256)": [
					{
						"notice": "The function has been called too late. It cannot be called after `time`."
					}
				],
				"gamedEnded()": [
					{
						"notice": "The game has already ended."
					}
				],
				"noRightToAnnounceTheResult()": [
					{
						"notice": "User has no right to announce the result."
					}
				],
				"noRightToPick()": [
					{
						"notice": "User doesn't have the right to pick."
					}
				],
				"noRightToReveal()": [
					{
						"notice": "User doesn't have the right to reveal."
					}
				],
				"sameUserAddresses()": [
					{
						"notice": "The competitors should be different"
					}
				],
				"userAlreadyCommited()": [
					{
						"notice": "User have already commited before."
					}
				],
				"userAlreadyRevealed()": [
					{
						"notice": "User have already revealed before."
					}
				],
				"wrongData()": [
					{
						"notice": "User has entered wrong data while revealing"
					}
				]
			},
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"RockPaperScissors.sol": "RockPaperScissors"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"RockPaperScissors.sol": {
			"keccak256": "0x3e3f74029ccf26ad6f567c8d6b3c7f6c351fb46d0e00879b892b783832b932fc",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://f59f8dfe30ae58bbd2009ddd842032894458f15795e100827673d47fc3db7bb8",
				"dweb:/ipfs/QmdkAFrLyYXRAA1Cg2FbkLio79Bdt5mkX4UkYxoWAz8mPv"
			]
		}
	},
	"version": 1
}